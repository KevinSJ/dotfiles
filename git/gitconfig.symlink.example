[init]
  defaultBranch = master
[user]
  name = AUTHOR_NAME
  email = AUTHOR_EMAIL
  signingkey = GPG_SIGNING_KEY
[github]
  user = AUTHOR_HANDLE
[credential]
  helper = GIT_CREDENTIAL_HELPER
[branch]
  # Show most recently changed branches first.
  sort = -committerdate
[alias]
  ca = !git add -A && git commit -av
  # Switch to a branch, creating it if necessary.
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch --all
  remotes = remote --verbose
  br = branch
  p = add -p
  co = checkout
  ci = commit
  coi = !git for-each-ref --sort=-committerdate --format='%(refname:short) (%(committerdate:relative))' refs/heads | fzf --reverse --nth=1 --preview 'git log --patch --color {1}...{1}~5' | awk '{print $1}' | xargs git checkout
  st = status
  staged = diff --staged
[color]
  diff = auto
  status = auto
  branch = auto
  ui = auto
[status]
  short = true
  branch = true
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[help]
  # Automatically correct and execute mistyped commands.
  autocorrect = 1
[commit]
  template = ~/.gitmessage
  verbose = true
[core]
  excludesfile = ~/.gitignore
  editor = nvim
  # Speed up commands involving untracked files such as `git status`.
  # https://git-scm.com/docs/git-update-index#_untracked_cache
  untrackedCache = true
[difftool]
  prompt = false
[mergetool]
  prompt = false
[push]
  #simple - in centralized workflow, work like upstream with an added safety to
  #refuse to push if the upstream branchâ€™s name is different from the local one.
  default = simple
[rebase]
  # squash commits down when merging
  # https://thoughtbot.com/blog/autosquashing-git-commits
  autosquash = true
  autostash  = true
[pull]
  ff                     = only
  # Always prefer rebase
  rebase                 = true
  autostash              = true
[push]
  autosetupremote = true
[commit]
  gpgsign = false
[hub]
  protocol = https
[fetch]
  prune = true

# Force vim to use .gitconfig type
# vim:ft=.gitconfig:ts=2:sw=2
